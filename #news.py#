import pybitcointools as pt
import blockchain, copy, state_library
create_sig_list=['id', 'type', 'post', 'count', 'amount']
upvote_sig_list=['id', 'post_id', 'type', 'count', 'amount']
downvote_sig_list=['id', 'post_id', 'type', 'count', 'amount']
name_sig_list=['id', 'type', 'count', 'name', 'vote_dic']
burn_sig_list=['id', 'type', 'count', 'name', 'amount']

maxPostLength=140
userNamePerBlockFee=5
postFee=10000
upvoteFee=10000
downvoteFee=10000
reputationFee=10000
userNameCreationFee=10000


def upvote(post, tx):
    post=copy.deepcopy(post)
    X=tx['amount']
    P=0.3#portion of upvote that gets paid to owners of the post.
    P3=0.3#portion of payment that goes to the parent of this post.
    #this post should get x*(1-P) more valuable
    #upvoter now owns (1-P)X/(all value added to this post)
    #if this is a top-level post
    ##P*X is distributed to the owners of this post
    #else if this is a 2nd level post
    ##P*(1-P3)*X goes to owner of this post, and P*P3*X go to the owners of the parent.
    #else if this is a 3rd level post
    ##P*(1-P3)*X goes to owner of this post, and P*P3*(1-P3)*X go to the owners of the parent, and P*P3*P3*X goes to the grandparent
    #else ...
def new_post(tx):
    print('tx: ' +str(tx))
    tx.pop('signature')
    tx.pop('id')
    tx.pop('count')
    tx.pop('type')
    return tx
def createCheck(i, state):
    if 'post' not in i:
        print('post error')
        return False
    if type(i['post']) != type('string'):
        print('post type error')
        return False
    if len(i['post'])>140:
        print('post too long')
        return False
    if 'amount' not in i:
        print('amount error')
        return False
    if type(i['amount'])!=type(10):
        print('amount type error')
        return False
    if i['amount']<10000:
        print('fee error')
        return False
    message=blockchain.message2signObject(i, create_sig_list)
    if not pt.ecdsa_verify(message, i['signature'], i['id']):
        print('i: ' +str(i))
        print('signature error')
        return False
    return True
